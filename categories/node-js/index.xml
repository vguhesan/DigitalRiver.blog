<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Node JS on Digital River</title>
    <link>https://DigitalRiver.blog/categories/node-js/</link>
    <description>Recent content in Node JS on Digital River</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 14 Oct 2016 18:42:15 +0000</lastBuildDate>
    <atom:link href="https://DigitalRiver.blog/categories/node-js/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to package your node.js application for deploying it in an offline environment?</title>
      <link>https://DigitalRiver.blog/2016/10/14/how-to-package-your-node-js-application-for-deploying-it-in-an-offline-environment/</link>
      <pubDate>Fri, 14 Oct 2016 18:42:15 +0000</pubDate>
      <guid>https://DigitalRiver.blog/2016/10/14/how-to-package-your-node-js-application-for-deploying-it-in-an-offline-environment/</guid>
      <description>&amp;lt;img src=&amp;#34;/img/2016/10/node2.png&amp;#34; alt=&amp;#34;node2&amp;#34;&amp;gt; Personally speaking, I prefer to have a self-contained bundle with all the artifacts and modules that might be required to deploy an application (not just Node.js application) in Production. In that way, I know exactly the bits that were installed and nothing more and nothing less. It also eliminates the availability of the NPM modules and network connectivity issues, etc. The following procedure shows you how to create a simple &amp;ldquo;Hello World&amp;rdquo; Node.</description>
    </item>
    <item>
      <title>Getting started with vertx (vert.io) – an alternative to node.js</title>
      <link>https://DigitalRiver.blog/2012/11/15/getting-started-with-vertx-vert-io-an-alternative-to-node-js/</link>
      <pubDate>Thu, 15 Nov 2012 23:31:21 +0000</pubDate>
      <guid>https://DigitalRiver.blog/2012/11/15/getting-started-with-vertx-vert-io-an-alternative-to-node-js/</guid>
      <description>Article Getting started with vertx (vert.io) – an alternative to node.js - has been posted on the new website at:&#xA;/getting-started-with-vertx-vert-io-an-alternative-to-node-js/ </description>
    </item>
    <item>
      <title>Getting started with vertx (vert.io) - an alternative to node.js</title>
      <link>https://DigitalRiver.blog/2012/11/15/getting-started-with-vertx-vert-io-an-alternative-to-node-js-2/</link>
      <pubDate>Thu, 15 Nov 2012 18:12:15 +0000</pubDate>
      <guid>https://DigitalRiver.blog/2012/11/15/getting-started-with-vertx-vert-io-an-alternative-to-node-js-2/</guid>
      <description>Lately there has been a lot of synergy and publicity around node.js (especially if you want to utilize the robust features of a JavaScript language on the server-side). If you are not familiar with this, I would suggest you look at the following link:&#xA;Node.js - Event-driven I/O server-side JavaScript environment based on V8.&#xA;If you are a Java developer and as you try out the examples, you will notice how this will be a great addition into your infrastructure.</description>
    </item>
  </channel>
</rss>
